{
  "benchmark_details": {
    "is_benchmark": true,
    "name": "RobuNFR (Robustness Evaluation of Non-Functional Requirements Aware Code Generation)",
    "abbreviation": "RobuNFR",
    "overview": "RobuNFR is an automated framework that evaluates the robustness of LLMs in code generation while incorporating Non-Functional Requirements (NFRs). It examines four NFR dimensions—design, readability, reliability, and performance—across three methodologies: prompt variation, regression testing, and diverse workflows.",
    "data_type": "code generation tasks",
    "domains": [
      "Software Engineering"
    ],
    "languages": [
      "Python"
    ],
    "similar_benchmarks": [
      "HumanEval",
      "HumanEval-ET",
      "MBPP",
      "MBPP-ET"
    ],
    "resources": [
      "https://www-cdn.anthropic.com/de8ba9b01c9ab7cbabf5c33b80b7bbc618857627/Model_Card_Claude_3.pdf"
    ]
  },
  "purpose_and_intended_users": {
    "goal": "To evaluate the robustness of LLMs in addressing Non-Functional Requirements (NFRs) during code generation.",
    "audience": [
      "Software Developers",
      "Machine Learning Researchers"
    ],
    "tasks": [
      "Code Generation",
      "Code Quality Assessment"
    ],
    "limitations": "N/A",
    "out_of_scope_uses": []
  },
  "data": {
    "source": "HumanEval, HumanEval-ET, MBPP, MBPP-ET benchmarks.",
    "size": "164 programming problems (HumanEval), 427 programming problems (MBPP)",
    "format": "N/A",
    "annotation": "N/A"
  },
  "methodology": {
    "methods": [
      "Prompt Variation",
      "Regression Testing",
      "NFR-Aware Code Generation Workflows"
    ],
    "metrics": [
      "Pass@1",
      "Code Smell Density",
      "Readability Density",
      "Exception Handling Density",
      "Execution Time"
    ],
    "calculation": "Metrics are calculated based on passing tests and performance of generated code.",
    "interpretation": "Higher Pass@1 indicates better performance in functional correctness; lower code smell density indicates better design.",
    "baseline_results": null,
    "validation": "Tests against existing benchmarks to ensure consistency of results."
  },
  "targeted_risks": {
    "risk_categories": [
      "Robustness",
      "Accuracy",
      "Fairness"
    ],
    "atlas_risks": {
      "risks": []
    },
    "demographic_analysis": "N/A",
    "harm": "Inconsistencies in LLM outputs could lead to unreliable code generation."
  },
  "ethical_and_legal_considerations": {
    "privacy_and_anonymity": "N/A",
    "data_licensing": "N/A",
    "consent_procedures": "N/A",
    "compliance_with_regulations": "N/A"
  }
}