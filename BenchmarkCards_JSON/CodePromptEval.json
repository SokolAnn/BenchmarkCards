{
  "benchmark_details": {
    "is_benchmark": true,
    "name": "CodePromptEval",
    "abbreviation": "N/A",
    "overview": "CodePromptEval is a dataset of 7072 prompts designed to evaluate the impact of five prompt techniques on correctness, similarity, and code quality of functions generated by Large Language Models (LLMs). It includes a comprehensive factorial experiment designed to assess these prompt techniques and their interactions.",
    "data_type": "code generation prompts",
    "domains": [
      "Software Engineering"
    ],
    "languages": [
      "Python"
    ],
    "similar_benchmarks": [
      "CoderEval"
    ],
    "resources": [
      "https://github.com/icetlab/CodePromptEval"
    ]
  },
  "purpose_and_intended_users": {
    "goal": "To evaluate the impact of different prompt techniques on code generation by LLMs, focusing on dimensions of correctness, similarity to human-written code, and code quality.",
    "audience": [
      "ML Researchers",
      "Software Developers",
      "AI Researchers"
    ],
    "tasks": [
      "Code Generation"
    ],
    "limitations": "The impact of prompt techniques was not as large as expected; most combinations of techniques do not lead to significant improvements.",
    "out_of_scope_uses": []
  },
  "data": {
    "source": "A combination of prompts from the CoderEval benchmark and extended with variations for prompt techniques.",
    "size": "7072 prompts",
    "format": "CSV",
    "annotation": "Manually created by researchers based on functionality requirements."
  },
  "methodology": {
    "methods": [
      "Statistical analysis",
      "Multilinear regression"
    ],
    "metrics": [
      "Pass@1",
      "CrystalBLEU"
    ],
    "calculation": "Pass@1 measures how many of the generated functions pass the provided tests; CrystalBLEU measures similarity to human-written code.",
    "interpretation": "Higher Pass@1 indicates better correctness; higher CrystalBLEU indicates closer similarity to human-generated code.",
    "baseline_results": "Performance differences of LLMs in passing tests and generating similar code as measured by Pass@1 and CrystalBLEU scores.",
    "validation": "Statistical tests were performed to validate the performance of generated functions."
  },
  "targeted_risks": {
    "risk_categories": [
      "Fairness",
      "Accuracy",
      "Robustness"
    ],
    "atlas_risks": {
      "risks": [
        {
          "category": "Accuracy",
          "subcategory": [
            "Unrepresentative data"
          ]
        },
        {
          "category": "Fairness",
          "subcategory": [
            "Output bias"
          ]
        },
        {
          "category": "Robustness",
          "subcategory": [
            "Prompt injection attack"
          ]
        }
      ]
    },
    "demographic_analysis": "N/A",
    "harm": []
  },
  "ethical_and_legal_considerations": {
    "privacy_and_anonymity": "N/A",
    "data_licensing": "N/A",
    "consent_procedures": "N/A",
    "compliance_with_regulations": "N/A"
  }
}