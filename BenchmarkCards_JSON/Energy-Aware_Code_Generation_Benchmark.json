{
  "benchmark_details": {
    "is_benchmark": true,
    "name": "Energy-Aware Code Generation Benchmark",
    "abbreviation": "N/A",
    "overview": "This study benchmarks Small Language Models (SLMs) against Large Language Models (LLMs) for energy-efficient code generation, comparing their performance and energy efficiency on 150 programming problems from LeetCode.",
    "data_type": "programming problems",
    "domains": [
      "Natural Language Processing"
    ],
    "languages": [
      "English"
    ],
    "similar_benchmarks": [],
    "resources": [
      "https://huggingface.co/stabilityai/stable-code-3b",
      "https://huggingface.co/bigcode/starcoderbase-3b",
      "https://huggingface.co/Qwen/Qwen2.5-Coder-3B-Instruct"
    ]
  },
  "purpose_and_intended_users": {
    "goal": "To evaluate the efficiency and sustainability of Small Language Models (SLMs) in comparison to Large Language Models (LLMs) for code generation tasks.",
    "audience": [
      "Academic Researchers",
      "Software Developers",
      "Environmental Scientists"
    ],
    "tasks": [
      "Code Generation",
      "Performance Evaluation"
    ],
    "limitations": "The findings may not apply to all LLMs, especially those using newer architectures or trained on different datasets.",
    "out_of_scope_uses": []
  },
  "data": {
    "source": "150 coding problems randomly selected from LeetCode, categorized by difficulty: easy, medium, and hard.",
    "size": "150 problems",
    "format": "N/A",
    "annotation": "N/A"
  },
  "methodology": {
    "methods": [
      "Statistical evaluation",
      "Energy consumption measurement",
      "Runtime and memory usage analysis"
    ],
    "metrics": [
      "Correctness",
      "Runtime",
      "Memory usage",
      "Energy consumption"
    ],
    "calculation": "Metrics are calculated based on execution of generated code in a controlled environment using Python scripts.",
    "interpretation": "Lower execution time and energy consumption indicate better efficiency. Higher correctness signals more effective code generation.",
    "baseline_results": "Human-written solutions are used as the baseline for correctness and efficiency.",
    "validation": "Each generated solution is tested against community-verified solutions to assess correctness."
  },
  "targeted_risks": {
    "risk_categories": [
      "Energy Efficiency",
      "Code Performance"
    ],
    "atlas_risks": {
      "risks": []
    },
    "demographic_analysis": "N/A",
    "harm": []
  },
  "ethical_and_legal_considerations": {
    "privacy_and_anonymity": "N/A",
    "data_licensing": "N/A",
    "consent_procedures": "N/A",
    "compliance_with_regulations": "N/A"
  }
}