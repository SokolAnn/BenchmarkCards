{
  "benchmark_details": {
    "is_benchmark": true,
    "name": "DomainCodeBench",
    "abbreviation": "N/A",
    "overview": "DomainCodeBench is a multi-domain code generation benchmark designed to systematically evaluate LLMs across 12 software application domains and 15 programming languages. It contains 2,400 manually verified tasks with ground-truth, human-annotated docstrings, and fine-grained dependency information to ensure more coverage of domain-specific challenges.",
    "data_type": "programming tasks",
    "domains": [
      "Natural Language Processing",
      "Computer Vision"
    ],
    "languages": [
      "Python",
      "JavaScript",
      "TypeScript",
      "Solidity",
      "Go",
      "C#",
      "C++",
      "C",
      "Java",
      "Rust",
      "Scala",
      "PHP",
      "Lua",
      "Kotlin",
      "Swift"
    ],
    "similar_benchmarks": [
      "DomainEval"
    ],
    "resources": [
      "https://github.com/DeepSoftwareAnalytics/DomainCodeBench"
    ]
  },
  "purpose_and_intended_users": {
    "goal": "The primary objective of DomainCodeBench is to evaluate LLMs' code generation capabilities in a variety of specific application domains.",
    "audience": [
      "ML Researchers",
      "Industry Practitioners",
      "Model Developers"
    ],
    "tasks": [
      "Code Generation"
    ],
    "limitations": "N/A",
    "out_of_scope_uses": []
  },
  "data": {
    "source": "High-quality open-source repositories on GitHub spanning 12 specific application domains.",
    "size": "2400 task instances",
    "format": "N/A",
    "annotation": "Manually annotated through cross-validation involving experienced programmers."
  },
  "methodology": {
    "methods": [
      "Automated metrics",
      "Human evaluation"
    ],
    "metrics": [
      "CodeBLEU"
    ],
    "calculation": "The CodeBLEU score evaluates both textual and semantic matches of the generated code against the ground truth.",
    "interpretation": "Higher CodeBLEU scores indicate better alignment of generated code with reference outputs.",
    "baseline_results": "The performance comparisons of various LLMs on code generation tasks were conducted.",
    "validation": "The code generation tasks were validated through extensive manual checking and dependency analysis."
  },
  "targeted_risks": {
    "risk_categories": [
      "Accuracy",
      "Fairness",
      "Robustness"
    ],
    "atlas_risks": {
      "risks": []
    },
    "demographic_analysis": "N/A",
    "harm": [
      "Domain-specific weaknesses"
    ]
  },
  "ethical_and_legal_considerations": {
    "privacy_and_anonymity": "N/A",
    "data_licensing": "N/A",
    "consent_procedures": "N/A",
    "compliance_with_regulations": "N/A"
  }
}