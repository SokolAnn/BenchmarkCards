{
  "benchmark_details": {
    "is_benchmark": true,
    "name": "DynaCode: A Dynamic Complexity-Aware Code Benchmark for Evaluating Large Language Models in Code Generation",
    "abbreviation": "DynaCode",
    "overview": "DynaCode is a dynamic, complexity-aware benchmark designed to systematically evaluate LLMs on code generation tasks. It generates nested code problems that capture varying levels of code complexity and inter-function dependencies, addressing the limitations of static benchmarks such as data contamination.",
    "data_type": "code generation problems",
    "domains": [
      "Computer Science"
    ],
    "languages": [
      "English"
    ],
    "similar_benchmarks": [
      "HumanEval",
      "MBPP",
      "CodeXGLUE",
      "ClassEval"
    ],
    "resources": [
      "https://github.com/HWH-2000/DynaCode"
    ]
  },
  "purpose_and_intended_users": {
    "goal": "To provide a reliable benchmark for evaluating the code generation capabilities of large language models (LLMs) through a dynamic evaluation strategy that incorporates code complexity and call-graph structures.",
    "audience": [
      "ML Researchers",
      "Model Developers",
      "Software Engineers"
    ],
    "tasks": [
      "Code Generation"
    ],
    "limitations": "N/A",
    "out_of_scope_uses": []
  },
  "data": {
    "source": "Generated dynamically from a set of existing code problems and complexity metrics.",
    "size": "189,263,141 unique code generation tasks",
    "format": "N/A",
    "annotation": "Automatically generated with validation against ground truth code."
  },
  "methodology": {
    "methods": [
      "Automated metrics evaluation",
      "Dynamic evaluation a strategy using complexity measures"
    ],
    "metrics": [
      "Pass@1 Score"
    ],
    "calculation": "The percentage of code problems solved correctly by models on the first attempt without additional corrections.",
    "interpretation": "Higher Pass@1 scores indicate better generalization capabilities of the LLMs across increasingly complex code problems.",
    "baseline_results": "Previous benchmarks include MBPP and MBPP+ with comparative results shown for various LLMs.",
    "validation": "Results validated through multiple evaluations across different complexity levels."
  },
  "targeted_risks": {
    "risk_categories": [
      "Accuracy",
      "Robustness",
      "Fairness"
    ],
    "atlas_risks": {
      "risks": [
        {
          "category": "Accuracy",
          "subcategory": [
            "Data contamination",
            "Poor model accuracy"
          ]
        },
        {
          "category": "Robustness",
          "subcategory": [
            "Prompt leaking"
          ]
        },
        {
          "category": "Fairness",
          "subcategory": [
            "Data bias"
          ]
        }
      ]
    },
    "demographic_analysis": "N/A",
    "harm": []
  },
  "ethical_and_legal_considerations": {
    "privacy_and_anonymity": "N/A",
    "data_licensing": "N/A",
    "consent_procedures": "N/A",
    "compliance_with_regulations": "N/A"
  }
}